{"version":3,"sources":["components/Reviews/Reviews.module.css","utils/status.js","components/Reviews/Reviews.jsx"],"names":["module","exports","Status","IDLE","PENDING","RESOLVED","REJECTED","Reviews","id","useState","moviesReviews","setMoviesReviews","status","setStatus","error","setError","useEffect","getMoviesRewiews","then","res","data","results","length","Error","catch","className","s","addInform","map","index","content","author","itemInform","message"],"mappings":"4HACAA,EAAOC,QAAU,CAAC,UAAY,2BAA2B,WAAa,8B,0GCMvDC,EAPA,CACbC,KAAM,OACNC,QAAS,UACTC,SAAU,WACVC,SAAU,Y,wBCQG,SAASC,EAAT,GAAwB,IAANC,EAAK,EAALA,GAC/B,EAA0CC,mBAAS,MAAnD,mBAAOC,EAAP,KAAsBC,EAAtB,KACA,EAA4BF,mBAASP,EAAOC,MAA5C,mBAAOS,EAAP,KAAeC,EAAf,KACA,EAA0BJ,mBAAS,MAAnC,mBAAOK,EAAP,KAAcC,EAAd,KAkBA,OAfAC,qBAAU,WACRC,YAAiBT,GACdU,MAAK,SAAAC,GACN,GAAgC,IAA5BA,EAAIC,KAAKC,QAAQC,OACnB,MAAM,IAAIC,MAAM,kBAElBZ,EAAiBQ,GACjBN,EAAUX,EAAOG,aAChBmB,OAAM,SAAAV,GACPC,EAASD,GAETD,EAAUX,EAAOI,eAElB,CAACE,IAGF,qCAEII,IAAWV,EAAOG,UAC1B,oBAAaoB,UAAWC,IAAEC,UAA1B,SACajB,GAAiBA,EAAcU,KAAKC,QAAQO,KAAI,WAAsBC,GAAtB,IAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,OAAZ,OAAiC,qBAAgBN,UAAWC,IAAEM,WAA7B,UAAyC,6BAAKD,IAAaD,IAAlDD,OAD9F,IAKFjB,IAAWV,EAAOI,UAAY,6BAAMQ,EAAMmB","file":"static/js/Reviews.a50bf9cd.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"addInform\":\"Reviews_addInform__aj91u\",\"itemInform\":\"Reviews_itemInform___qg23\"};","const Status = {\n  IDLE: 'idle',\n  PENDING: 'pending',\n  RESOLVED: 'resolved',\n  REJECTED: 'rejected',\n};\n\nexport default Status;\n","import { getMoviesRewiews } from '../../utils/apiService';\r\nimport { useState, useEffect } from 'react';\r\nimport Status from '../../utils/status';\r\nimport s from './Reviews.module.css'\r\n\r\n// const Status = {\r\n//   IDLE: 'idle',\r\n//   PENDING: 'pending',\r\n//   RESOLVED: 'resolved',\r\n//   REJECTED: 'rejected',\r\n// }\r\n\r\nexport default function Reviews({id}) {\r\n  const [moviesReviews, setMoviesReviews] = useState(null);\r\n  const [status, setStatus] = useState(Status.IDLE);\r\n  const [error, setError] = useState(null);\r\n  \r\n  \r\n  useEffect(() => {\r\n    getMoviesRewiews(id)\r\n      .then(res => {\r\n      if (res.data.results.length === 0) {\r\n        throw new Error(\"No Information\");\r\n     }\r\n      setMoviesReviews(res);\r\n      setStatus(Status.RESOLVED);\r\n    }).catch(error => {\r\n      setError(error);\r\n      // console.log('error', error);\r\n      setStatus(Status.REJECTED);\r\n    });\r\n  }, [id]);\r\n// console.log('moviesReviews', moviesReviews);\r\n  return (\r\n    <>\r\n      {\r\n        status === Status.RESOLVED && (\r\n<ul key={11} className={s.addInform}>\r\n            {moviesReviews && moviesReviews.data.results.map(({ content, author }, index) => (<li key={index} className={s.itemInform}><h3>{author}</h3>{content}</li>))}\r\n      </ul>\r\n        )\r\n      }\r\n      {status === Status.REJECTED && <h2>{ error.message}</h2>}\r\n </>\r\n  )\r\n};\r\n"],"sourceRoot":""}